plugins {
  // Provide convenience executables for trying out the examples.
  id 'application'
}

apply from: "$rootDir/gradle/any/dependencies.gradle"
apply from: "$rootDir/gradle/any/java-library.gradle"
apply from: "$rootDir/gradle/any/protobuf.gradle"

dependencies {
  api project(':cdm:cdm-core')

  // for CdmrServer: we should just add on the classpath?
  api project(':bufr')
  api project(':grib')

  implementation "io.grpc:grpc-protobuf:${depVersion.grpc}"
  implementation "io.grpc:grpc-stub:${depVersion.grpc}"
  compileOnly 'org.apache.tomcat:annotations-api:6.0.53'

  runtimeOnly "io.grpc:grpc-netty-shaded:${depVersion.grpc}"

  testImplementation project(':cdm-test-utils')
  testImplementation 'com.google.truth:truth'
  testImplementation "junit:junit:${depVersion.junit}"
  testImplementation 'commons-io:commons-io'
  testImplementation "org.mockito:mockito-core:${depVersion.mockito}"
  testImplementation "io.grpc:grpc-testing:${depVersion.grpc}"

  testRuntimeOnly 'ch.qos.logback:logback-classic'
}

protobuf {
  protoc { artifact = "com.google.protobuf:protoc:${depVersion.protobuf}" }
  plugins {
    grpc { artifact = "io.grpc:protoc-gen-grpc-java:${depVersion.grpc}" }
  }
  generateProtoTasks {
    all()*.plugins { grpc {} }
  }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
  main {
    java {
      srcDirs 'build/generated/source/proto/main/grpc'
    }
  }
}
